[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_attestationVaultAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_initialAdmin",
        "type": "address"
      },
      {
        "internalType": "address[]",
        "name": "_initialReviewers",
        "type": "address[]"
      },
      {
        "internalType": "uint256",
        "name": "_initialApprovalThresholdPercent",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_initialCopyleftLicenseURI",
        "type": "string"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "AttestationVaultNotSet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "IdeaAlreadySubmitted",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "IdeatorCannotBeZeroAddress",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InfoCannotBeEmpty",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "message",
        "type": "string"
      }
    ],
    "name": "NdaNotSigned",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__AccountNotReviewer",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "reviewer",
        "type": "address"
      }
    ],
    "name": "SparkIdeaRegistry__AlreadyVoted",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__CannotBeZeroAddress",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__EmptyInfo",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaAlreadyExists",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaAlreadyFinalized",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaNotDraft",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaNotFinalized",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaNotFound",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaNotModifiable",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "SparkIdeaRegistry__IdeaNotPending",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__IdeaTooOld",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__InvalidApprovalCount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__InvalidIdeaId",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__InvalidIpfsHash",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "threshold",
        "type": "uint256"
      }
    ],
    "name": "SparkIdeaRegistry__InvalidThreshold",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__InvalidTimestamp",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__NdaPlatformNotSigned",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__NoReviewersExist",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__NotAttestedToBothPlatformAgreements",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__NotAuthorizedToSetPatentId",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__OnlyIdeatorCanFinalize",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__OnlyIdeatorCanModify",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__ProvisionalPatentIdAlreadySet",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__SameIpfsHash",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SparkIdeaRegistry__TooManyModifications",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "oldContract",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newContract",
        "type": "address"
      }
    ],
    "name": "AttestationVaultUpdated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "string",
        "name": "newCopyleftLicenseURI",
        "type": "string"
      }
    ],
    "name": "CopyleftLicenseURISet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "enum ISparkIdeaRegistry.IdeaApprovalStatus",
        "name": "newStatus",
        "type": "uint8"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "approvalCount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "activeTotalReviewers",
        "type": "uint256"
      }
    ],
    "name": "IdeaApprovalStatusChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "ideator",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "finalIpfsHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      }
    ],
    "name": "IdeaFinalized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "newLicenseURI",
        "type": "string"
      }
    ],
    "name": "IdeaLicenseURISet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "ideator",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "previousIpfsHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "newIpfsHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "modificationNumber",
        "type": "uint256"
      }
    ],
    "name": "IdeaModified",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "bytes32",
        "name": "ndaHash",
        "type": "bytes32"
      }
    ],
    "name": "IdeaNdaHashRegistered",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "reviewer",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "support",
        "type": "bool"
      }
    ],
    "name": "IdeaReviewVoteCast",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "ideator",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "ipfsHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "copyleftLicenseURI",
        "type": "string"
      }
    ],
    "name": "IdeaSubmitted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "provisionalPatentId",
        "type": "string"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "setter",
        "type": "address"
      }
    ],
    "name": "ProvisionalPatentIdSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newThresholdPercent",
        "type": "uint256"
      }
    ],
    "name": "ReviewerApprovalThresholdSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newTotalReviewers",
        "type": "uint256"
      }
    ],
    "name": "ReviewerRoleGranted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "newTotalReviewers",
        "type": "uint256"
      }
    ],
    "name": "ReviewerRoleRevoked",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "previousAdminRole",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "newAdminRole",
        "type": "bytes32"
      }
    ],
    "name": "RoleAdminChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RoleGranted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "account",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "sender",
        "type": "address"
      }
    ],
    "name": "RoleRevoked",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "DEFAULT_ADMIN_ROLE",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "REVIEWER_ROLE",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "allIdeaIds",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "attestationVault",
    "outputs": [
      {
        "internalType": "contract AttestationVault",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "canIdeaBeModified",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "copyleftLicenseURI",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "finalizeIdea",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllIdeaIds",
    "outputs": [
      {
        "internalType": "bytes32[]",
        "name": "",
        "type": "bytes32[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "getApprovalCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "getIdea",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "ideaId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "ideator",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "ipfsHash",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "submissionTimestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "approvalCount",
            "type": "uint256"
          },
          {
            "internalType": "enum ISparkIdeaRegistry.IdeaApprovalStatus",
            "name": "approvalStatus",
            "type": "uint8"
          },
          {
            "internalType": "string",
            "name": "provisionalPatentId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "copyleftLicenseURI",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "lastModifiedTimestamp",
            "type": "uint256"
          }
        ],
        "internalType": "struct ISparkIdeaRegistry.Idea",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "getIdeaApprovalStatus",
    "outputs": [
      {
        "internalType": "enum ISparkIdeaRegistry.IdeaApprovalStatus",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "getIdeaModificationHistory",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "previousIpfsHash",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "newIpfsHash",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "modificationNumber",
            "type": "uint256"
          }
        ],
        "internalType": "struct ISparkIdeaRegistry.IdeaModification[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "getIdeator",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "getModificationCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "reviewer",
        "type": "address"
      }
    ],
    "name": "getReviewerVote",
    "outputs": [
      {
        "internalType": "bool",
        "name": "hasVoted",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "support",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      }
    ],
    "name": "getRoleAdmin",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "grantReviewerRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "grantRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "hasAnyReviewerVoted",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "hasRole",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "ideaModificationHistory",
    "outputs": [
      {
        "internalType": "string",
        "name": "previousIpfsHash",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "newIpfsHash",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "timestamp",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "modificationNumber",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "ideas",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "ideator",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "ipfsHash",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "submissionTimestamp",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "approvalCount",
        "type": "uint256"
      },
      {
        "internalType": "enum ISparkIdeaRegistry.IdeaApprovalStatus",
        "name": "approvalStatus",
        "type": "uint8"
      },
      {
        "internalType": "string",
        "name": "provisionalPatentId",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "copyleftLicenseURI",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "lastModifiedTimestamp",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "isIdeaApprovedByReviewers",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      }
    ],
    "name": "isIdeaFinalized",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "modificationCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "string",
        "name": "newIpfsHash",
        "type": "string"
      }
    ],
    "name": "modifyIdeaDetails",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "renounceRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "reviewerApprovalThresholdPercent",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "revokeReviewerRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "role",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "revokeRole",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_newAddress",
        "type": "address"
      }
    ],
    "name": "setAttestationVaultAddress",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_copyleftLicenseURI",
        "type": "string"
      }
    ],
    "name": "setCopyleftLicenseURI",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "string",
        "name": "_licenseURI",
        "type": "string"
      }
    ],
    "name": "setIdeaLicenseURI",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "bytes32",
        "name": "ndaHash",
        "type": "bytes32"
      }
    ],
    "name": "setIdeaNdaHash",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "string",
        "name": "_provisionalPatentId",
        "type": "string"
      }
    ],
    "name": "setProvisionalPatentId",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_thresholdPercent",
        "type": "uint256"
      }
    ],
    "name": "setReviewerApprovalThresholdPercent",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_ipfsHash",
        "type": "string"
      }
    ],
    "name": "submitIdea",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes4",
        "name": "interfaceId",
        "type": "bytes4"
      }
    ],
    "name": "supportsInterface",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalReviewers",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "ideaId",
        "type": "bytes32"
      },
      {
        "internalType": "bool",
        "name": "approveVote",
        "type": "bool"
      }
    ],
    "name": "voteOnIdea",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]