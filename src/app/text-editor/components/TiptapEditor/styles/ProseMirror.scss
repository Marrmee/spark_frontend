@use "variables";
@use "mixins";

.ProseMirror-selectednode {
  @at-root {
    &:has(iframe),
    img#{&} {
      box-shadow:
        0 0 0 3px variables.$bg-color,
        0 0 0 5px variables.$primary-color;
    }
  }
}

.ProseMirror {
  flex: 1;
  outline: none;
  width: 100%;
  white-space: pre-wrap;
  position: relative;
  padding-block: 1.75rem;

  @at-root {
    figcaption.ProseMirror-selectednode ~ img,
    img:has(+ figcaption.ProseMirror-selectednode) {
      box-shadow:
        0 0 0 3px variables.$bg-color,
        0 0 0 5px variables.$primary-color;
    }
  }

  // Editable content styles
  &[contenteditable="true"] {
    .ProseMirror-selectednode:has(iframe),
    img.ProseMirror-selectednode,
    img:has(+ figcaption.ProseMirror-selectednode) {
      box-shadow:
        0 0 0 3px variables.$bg-color,
        0 0 0 5px variables.$primary-color;
    }
  }

  &.resize-cursor {
    cursor: col-resize;
  }

  // Element spacing
  & > * {
    margin-top: 1.25rem;

    &:first-child {
      margin-top: 0;
    }
  }

  // Indentation levels
  @for $i from 1 through 4 {
    [data-indent="#{$i}"] {
      text-indent: 1em * $i;
    }
  }

  // Placeholder styles
  :where(& > p.is-editor-empty:first-child, figcaption.is-empty)::before {
    content: attr(data-placeholder);
    float: left;
    color: variables.$muted-fg-color;
    pointer-events: none;
    width: 100%;
    height: 0;
  }

  // Selection styles
  ::selection,
  .selection {
    background-color: variables.$editor-selection;
    opacity: 1 !important;
    color: #ffffff;
    text-shadow: none;
  }

  // Add specific selector for headings to ensure selection is visible when spanning multiple lines
  h1::selection, h2::selection, h3::selection, 
  h4::selection, h5::selection, h6::selection,
  h1 .selection, h2 .selection, h3 .selection, 
  h4 .selection, h5 .selection, h6 .selection {
    background-color: variables.$editor-selection !important;
    opacity: 1 !important;
    color: #ffffff !important;
    display: inline !important; /* Force inline display for multi-line selections */
    width: auto !important;
  }

  // Style for multi-line heading selections
  .multi-line-heading-selection {
    background-color: transparent;
    position: relative;
    z-index: 1;
    
    &::before {
      content: "";
      position: absolute;
      z-index: -1;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      pointer-events: none;
      background-color: rgba(variables.$editor-selection, 0.2);
    }
  }

  &[contenteditable="true"] {
    user-select: text !important;
    -webkit-user-select: text !important;
    -moz-user-select: text !important;
    -ms-user-select: text !important;
    cursor: text;
  }

  .selectedCell:after {
    z-index: 2;
    position: absolute;
    content: "";
    inset: 0;
    background-color: variables.$editor-selection;
    pointer-events: none;
  }

  // Heading styles
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: #FFFFFF;
  }

  h1 {
    font-size: 2rem;
    line-height: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }

  h2 {
    font-size: 1.5rem;
    line-height: 2rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    white-space: pre-wrap;
    word-wrap: break-word;
    position: relative;
    text-rendering: optimizeLegibility;
  }

  h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  h4 {
    font-size: 1.125rem;
    line-height: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  // Paragraph styles
  p {
    font-size: 1em;
    line-height: 1.75;
    display: block;
    margin-block-end: inherit;
  }

  // Link styles
  a {
    cursor: pointer;
    color: variables.$editor-link;
    text-decoration: underline;
    font-weight: 600;

    &:hover {
      text-decoration: underline;
    }

    &:not([href]) {
      color: inherit;
      text-decoration: none;
      font-weight: normal;
    }
  }

  // List styles
  ul,
  ol {
    padding-inline: 2rem;

    li {
      margin-block: 0.375rem;
      padding-inline-start: 0.375rem;
    }
  }

  ul {
    list-style-type: disc;
  }

  ol {
    list-style-type: decimal;
  }

  // Blockquote styles
  blockquote {
    display: block;
    padding-left: 1rem;
    margin-left: 0;
    border-left: 0.25rem solid variables.$border-color;
    font-style: italic;
  }

  // Horizontal rule styles
  hr {
    display: block;
    border-top: 1px solid variables.$border-color;
    margin: 1.5rem 0;
    height: 1px;
    
    &.editor-horizontal-rule {
      margin: 2rem 0;
    }
  }

  // Media styles
  img,
  iframe,
  video {
    display: block;
    max-width: 100%;
    height: auto;
    margin-inline: auto;
    cursor: default;
  }

  iframe {
    width: 100%;
    margin: 0 auto;
    pointer-events: none;
    aspect-ratio: 16 / 9;
    position: relative;
  }

  // Figure and figcaption styles
  figure {
    cursor: default;
    user-select: none;
  }

  figcaption {
    font-size: 90%;
    color: variables.$muted-fg-color;
    text-align: center;
    line-height: 1.4;
    cursor: text;
    padding: 0.5rem 1.5rem 0.25rem;
    margin-bottom: -0.25rem;
  }

  // Code and preformatted text styles
  code,
  kbd,
  samp,
  pre {
    font-family: variables.$editor-code-font;
    font-feature-settings: normal;
    font-variation-settings: normal;
  }

  code {
    background: variables.$editor-code-bg;
    border: 1px solid variables.$border-color;
    border-radius: variables.$radius-sm;
    padding: 0.15rem 0.3rem;
    font-size: 90%;
  }

  pre {
    white-space: pre !important;
    tab-size: 2;
    line-height: 1.55;
    padding: 0.75rem 1.25rem;
    background: variables.$editor-code-bg;
    border: 1px solid variables.$border-color;
    color: variables.$fg-color;
    @include mixins.custom-scrollbar;

    code {
      background: transparent;
      padding: 0;
      border: none;
    }
  }

  .tableWrapper {
    @include mixins.custom-scrollbar;
    border: 1px solid variables.$border-color;
  }

  table {
    border: 1px solid variables.$border-color;
    font-size: 90%;
    overflow: hidden;
    border-collapse: collapse;
    table-layout: fixed;
    margin-inline: auto;

    th,
    td {
      border: 1px solid variables.$border-color;
      padding: 0.5rem 0.75rem;
      position: relative;
      vertical-align: top;
      text-align: left;
    }

    th {
      background-color: variables.$muted-color;
    }

    .column-resize-handle {
      background-color: variables.$primary-color;
      bottom: -2px;
      pointer-events: none;
      position: absolute;
      right: -1px;
      top: 0;
      width: 3.5px;
      z-index: 10;
    }
  }

  // Alignment styles
  p, h1, h2, h3, h4, h5, h6, ul, ol, blockquote {
    &[style*="text-align:center"],
    &[style*="text-align: center"] {
      text-align: center !important;
    }
    
    &[style*="text-align:right"],
    &[style*="text-align: right"] {
      text-align: right !important;
    }
    
    &[style*="text-align:justify"],
    &[style*="text-align: justify"] {
      text-align: justify !important;
    }
    
    &[style*="text-align:left"],
    &[style*="text-align: left"] {
      text-align: left !important;
    }
  }

  & > .ProseMirror-yjs-cursor {
    position: relative;
    margin-left: -1px;
    margin-right: -1px;
    border-left: 1px solid red;
    border-right: 1px solid red;
    border-color: currentColor;
    word-break: normal;
    pointer-events: none;

    &:after {
      content: "";
      display: block;
      position: absolute;
      left: -8px;
      right: -8px;
      top: 0;
      bottom: 0;
      color: variables.$muted-fg-color;
      line-height: 0;
      pointer-events: none;
    }

    // Cursor styles
  }

  ::selection {
    background-color: variables.$editor-selection;
  }

  p {
    display: block;
    margin-block-end: inherit;
  }

  ::selection {
    background-color: variables.$editor-selection;
  }

  ul + figcaption,
  ol + figcaption {
    margin-top: 0.5rem;
    font-style: italic;
    color: variables.$muted-fg-color;
  }

  code {
    font-family: variables.$editor-code-font;
  }

  pre {
    background: variables.$editor-code-bg;
    border: 1px solid variables.$border-color;
    border-radius: variables.$radius-sm;
    padding: 0.5rem;
  }

  pre code {
    padding: 0;
    background: variables.$editor-code-bg;
    border: 1px solid variables.$border-color;
    color: variables.$fg-color;
  }

  .editor-progress-bar {
    background-color: variables.$muted-color;

    &::-webkit-progress-value {
      background-color: variables.$primary-color;
    }
  }

  // &:has(.is-empty:last-child:first-child) {
  //   // ... existing code ...
  // }

  // &.is-empty::before {
  //   // ... existing code ...
  // }
}
